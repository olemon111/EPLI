2023å¹´ 03æœˆ 07æ—¥ æ˜ŸæœŸäºŒ 20:57:25 CST
GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from numactl...
(No debugging symbols found in numactl)
(gdb) [K(gdb) [K(gdb) 
(gdb) r
Starting program: /usr/bin/numactl --cpubind=1 --membind=1 ./tests/../build/microbench_epli --dbname apex --load-size 400000000 --put-size 0 --get-size 10000000 --loadstype 3 --reverse 0 -t 1
process 870389 is executing new program: /home/lbl/code/EPLI/build/microbench_epli
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
THREAD NUMBER:         1
LOAD_SIZE:             400000000
PUT_SIZE:              0
GET_SIZE:              10000000
DB  name:              apex
Loads type:            3
Reverse:               0
read 400000000 values from /home/lbl/dataset/generate_random_ycsb.dat in 7738 ms (51.6929 M values/s)
before newdb, dram space use: 2.98692 GB
creating a new pool
pool opened at: 0x7ff500000000
Intial allocator: 1
Start loading ....
[Metic-Load]: Load 400000000: cost 98.5331s, kops/s: 4059.55 .
after load, dram space use: 6.92435 GB
apex DRAM size: 926.06 MB.

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) bg[Kt
#0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007ffff71d4859 in __GI_abort () at abort.c:79
#2  0x00007ffff723f26e in __libc_message (action=action@entry=do_abort, fmt=fmt@entry=0x7ffff7369298 "%s\n")
    at ../sysdeps/posix/libc_fatal.c:155
#3  0x00007ffff72472fc in malloc_printerr (
    str=str@entry=0x7ffff736b6e0 "corrupted size vs. prev_size while consolidating") at malloc.c:5347
#4  0x00007ffff724904e in _int_free (av=0x7ffff739eb80 <main_arena>, p=0x555591226250, 
    have_lock=<optimized out>) at malloc.c:4332
#5  0x000055555559dcfc in std::_Deque_base<apex::AlexNode<unsigned long, unsigned long>*, std::allocator<apex::AlexNode<unsigned long, unsigned long>*> >::~_Deque_base() ()
#6  0x00005555555ab45a in apex::Apex<unsigned long, unsigned long, apex::AlexCompare, my_alloc::allocator<std::pair<unsigned long, unsigned long> >, true>::get_PM_size() ()
#7  0x00005555555abbb0 in dbInter::ApexDB::Info() ()
#8  0x000055555556d39f in main ()
(gdb) q
A debugging session is active.

	Inferior 1 [process 870389] will be killed.

Quit anyway? (y or n) t[Ky
